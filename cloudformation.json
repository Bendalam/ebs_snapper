{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Configures SNS topics and Lambda jobs for EBS Snapshot management",
  "Parameters" : {
    "WatchdogRegion" : {
      "Description" : "Region where rackspace-support-standard topic is deployed (Janus is in us-west-2)",
      "Type": "String",
      "Default" : "us-east-1",
      "AllowedValues" : ["us-west-1", "us-west-2", "us-east-1", "sa-east-1", "eu-west-1", "eu-central-1", "ap-southeast-2", "ap-southeast-1", "ap-northeast-1"]
    },
    "LambdaS3Bucket" : {
      "Description" : "S3 bucket name where the lambda functions are located",
      "Type": "String"
    },
    "CreateScheduleExpression" : {
      "Description" : "How often the function should run that checks for snapshots that should be taken.",
      "Type": "String",
      "Default" : "rate(30 minutes)"
    },
    "CleanScheduleExpression" : {
      "Description" : "How often the function should run that checks for snapshots that should be cleaned up.",
      "Type": "String",
      "Default" : "rate(6 hours)"
    },
    "ReplicationScheduleExpression" : {
      "Description" : "How often the function should run that performs snapshot replication.",
      "Type": "String",
      "Default" : "rate(30 minutes)"
    }
  },
  "Resources" : {
    "EbsSnapshotConfigurationTable" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "TableName" : "ebs_snapshot_configuration",
        "AttributeDefinitions" : [
          {
            "AttributeName" : "aws_account_id",
            "AttributeType" : "S"
          },
          {
            "AttributeName" : "id",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          { "AttributeName" : "aws_account_id", "KeyType" : "HASH" },
          { "AttributeName" : "id", "KeyType" : "RANGE" }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5" ,
          "WriteCapacityUnits" : "10"
        }
      }
    },
    "FanoutCreateSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed snapshot fanout",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "1800",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "FanoutCreateSnapshotFunction" }
          }
        ]
      }
    },
    "FanoutCreateSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "snapshot and tags main task",
        "Handler" : "lambdas.lambda_fanout_snapshot",
        "MemorySize" : 128,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "FanoutCleanSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed cleanup fanout",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "21600",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "FanoutCleanSnapshotFunction" }
          }
        ]
      }
    },
    "FanoutCleanSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "snapshot and tags main task",
        "Handler" : "lambdas.lambda_fanout_clean",
        "MemorySize" : 128,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "FanoutReplicationSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed replication fanout",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "1800",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "FanoutReplicationSnapshotFunction" }
          }
        ]
      }
    },
    "FanoutReplicationSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "snapshot and tags main task",
        "Handler" : "lambdas.lambda_fanout_replication",
        "MemorySize" : 128,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "CreateSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed snapshot creation",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "1800",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "CreateSnapshotFunction" }
          }
        ]
      }
    },
    "CreateSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "create tags and snapshots task",
        "Handler" : "lambdas.lambda_snapshot",
        "MemorySize" : 256,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "CleanSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed snapshot cleanup",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "21600",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "CleanSnapshotFunction" }
          }
        ]
      }
    },
    "CleanSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "create tags and snapshots task",
        "Handler" : "lambdas.lambda_clean",
        "MemorySize" : 256,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "ReplicationSnapshotAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm for failed snapshot replication",
        "AlarmActions" : [{
            "Fn::Join" : [":", ["arn", "aws", "sns", {
                  "Ref" : "WatchdogRegion"
                }, {
                  "Ref" : "AWS::AccountId"
                }, "rackspace-support-standard"]]
          }
        ],
        "MetricName" : "Errors",
        "Namespace" : "AWS/Lambda",
        "ComparisonOperator" : "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods" : "2",
        "Period" : "1800",
        "Statistic" : "Sum",
        "Threshold" : "2",
        "Dimensions" : [{
            "Name" : "FunctionName",
            "Value" : { "Ref" : "ReplicationSnapshotFunction" }
          }
        ]
      }
    },
    "ReplicationSnapshotFunction" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket" : { "Ref" : "LambdaS3Bucket" },
          "S3Key" : "ebs_snapper.zip"
        },
        "Description" : "snapshot replication task",
        "Handler" : "lambdas.lambda_replication",
        "MemorySize" : 256,
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : "300"
      }
    },
    "LambdaExecutionRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement" : [{
              "Effect" : "Allow",
              "Principal" : {
                "Service" : ["lambda.amazonaws.com"]
              },
              "Action" : ["sts:AssumeRole"]
            }
          ]
        },
        "Path" : "/",
        "Policies" : [{
            "PolicyName" : "rs_lambda_role",
            "PolicyDocument" : {
              "Version" : "2012-10-17",
              "Statement" : [{
                  "Effect" : "Allow",
                  "Action" : ["logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"],
                  "Resource" : "arn:aws:logs:*:*:*"
                }, {
                  "Effect" : "Allow",
                  "Action" : [
                    "cloudformation:Describe*",
                    "ec2:Describe*",
                    "ec2:CreateTags",
                    "ec2:CreateSnapshot",
                    "ec2:DeleteSnapshot",
                    "ec2:CopySnapshot",
                    "events:Describe*",
                    "events:List*",
                    "events:EnableRule",
                    "events:DisableRule",
                  ],
                  "Resource" : "*"
                }, {
                  "Effect" : "Allow",
                  "Action" : ["SNS:Publish",
                    "SNS:ListTopics"],
                  "Resource" : "arn:aws:sns:*"
                }, {
                  "Effect" : "Allow",
                  "Action" : ["dynamodb:*"],
                  "Resource" : { "Fn::Join" : [ "", [
                    "arn:aws:dynamodb:",
                    { "Ref" : "AWS::Region" },
                    ":", {"Ref": "AWS::AccountId"},
                    ":table/",
                    { "Ref" : "EbsSnapshotConfigurationTable" }
                  ] ] }
                }
              ]
            }
          }
        ]
      }
    },
    "CreateSnapshotTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "CreateSnapshotTopic",
        "Subscription" : [{
            "Endpoint" : { "Fn::GetAtt" : ["CreateSnapshotFunction", "Arn"] },
            "Protocol" : "lambda"
          }
        ],
        "TopicName" : "CreateSnapshotTopic"
      },
      "DependsOn" : "CreateSnapshotFunction"
    },
    "LambdaInvokePermissionCreateSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["CreateSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn" : { "Ref": "CreateSnapshotTopic" }
      }
    },
    "CleanSnapshotTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "CleanSnapshotTopic",
        "Subscription" : [{
            "Endpoint" : { "Fn::GetAtt" : ["CleanSnapshotFunction", "Arn"] },
            "Protocol" : "lambda"
          }
        ],
        "TopicName" : "CleanSnapshotTopic"
      },
      "DependsOn" : "CleanSnapshotFunction"
    },
    "LambdaInvokePermissionCleanSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["CleanSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn" : { "Ref": "CleanSnapshotTopic" }
      }
    },
    "ReplicationSnapshotTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "ReplicationSnapshotTopic",
        "Subscription" : [{
            "Endpoint" : { "Fn::GetAtt" : ["ReplicationSnapshotFunction", "Arn"] },
            "Protocol" : "lambda"
          }
        ],
        "TopicName" : "ReplicationSnapshotTopic"
      },
      "DependsOn" : "ReplicationSnapshotFunction"
    },
    "LambdaInvokePermissionReplicationSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["ReplicationSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn" : { "Ref": "ReplicationSnapshotTopic" }
      }
    },
    "LambdaInvokeCreatePermissionScheduledRule": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["FanoutCreateSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : { "Fn::GetAtt": ["ScheduledRuleCreateFunction", "Arn"] }
      }
    },
    "ScheduledRuleCreateFunction": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule for creating new snapshots",
        "ScheduleExpression": { "Ref": "CreateScheduleExpression" },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["FanoutCreateSnapshotFunction", "Arn"] },
          "Id": "TargetFunctionV1"
        }]
      }
    },
    "LambdaInvokeCleanPermissionScheduledRule": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["FanoutCleanSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : { "Fn::GetAtt": ["ScheduledRuleCleanFunction", "Arn"] }
      }
    },
    "ScheduledRuleCleanFunction": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule for cleaning up old snapshots",
        "ScheduleExpression": { "Ref": "CleanScheduleExpression" },
        "State": "ENABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["FanoutCleanSnapshotFunction", "Arn"] },
          "Id": "TargetFunctionV1"
        }]
      }
    },
    "LambdaInvokeReplicationPermissionScheduledRule": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["FanoutReplicationSnapshotFunction", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : { "Fn::GetAtt": ["ScheduledRuleReplicationFunction", "Arn"] }
      }
    },
    "ScheduledRuleReplicationFunction": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "ScheduledRule for performing snapshot replication",
        "ScheduleExpression": { "Ref": "ReplicationScheduleExpression" },
        "State": "DISABLED",
        "Targets": [{
          "Arn": { "Fn::GetAtt": ["FanoutReplicationSnapshotFunction", "Arn"] },
          "Id": "TargetFunctionV1"
        }]
      }
    }
  }
}
